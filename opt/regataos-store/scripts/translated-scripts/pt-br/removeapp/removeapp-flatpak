#!/bin/sh

# Settings and variables
#App name and more information
app_name="$name"
app_nickname="$nickname"
package_id="$package"
command_uninstall="sudo flatpak --assumeyes remove $package_id"

#Variables for notifications
success_notify_title="$app_name"
success_notify_text="$app_name desinstalado com sucesso!"
error_notify_title="Erro na desinstalação do $app_name!"
error_notify_text="Ocorreu algum erro na desinstalação do $app_name."

#General information
Uninstall_queue="Desinstalação pendente: instalador ocupado..."
Uninstall_queue_packagekitd="Desinstalação pendente: atualizando o sistema..."
app_name_process="Desinstalar $app_name"
app_remove_status="Desinstalando $app_name..."
success_removal="Concluído!"
removal_error="Erro!"
removal_error_status="Erro na desinstalação!"
progressbar_dir="/tmp/progressbar-store"
installed_apps="/opt/regataos-store/installed-apps/installed-apps.txt"

# Notify
#Successful installation
function success_uninstall() {
    # All settings
    user=$(users | awk '{print $1}')
    user_id=$(id -u $user)

    title=$success_notify_title
    message=$success_notify_text

    sudo -u $user DISPLAY=:0 DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$user_id/bus notify-send -i emblem-ok-symbolic -u normal -a 'Regata OS Store' "$title" "$message"
}

#Installation failed
function uninstall_failed() {
    # All settings
    user=$(users | awk '{print $1}')
    user_id=$(id -u $user)

    title=$error_notify_title
    message=$error_notify_text

    sudo -u $user DISPLAY=:0 DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$user_id/bus notify-send -i emblem-important-symbolic -u normal -a 'Regata OS Store' "$title" "$message"
}

# Remove app
function remove_app() {
    # Start uninstall
    rm -f $progressbar_dir/download-percentage
    rm -f $progressbar_dir/download-size
    rm -f $progressbar_dir/download-speed
    rm -f $progressbar_dir/file-size
    rm -f $progressbar_dir/eta
    rm -f $progressbar_dir/progress

    echo "" > $progressbar_dir/progress
    echo "uninstall" > $progressbar_dir/installing
    echo "uninstall" > $progressbar_dir/uninstalling
    echo "uninstall" > $progressbar_dir/uninstalling-$app_nickname
    echo $app_name_process > $progressbar_dir/app-name
    echo $app_remove_status > $progressbar_dir/status
    echo "uninstall" > $progressbar_dir/progress-movement
    echo "show progress bar" > $progressbar_dir/progressbar
    echo "uninstalling" > "/tmp/regataos-store/config/status.txt"

    $command_uninstall    
}

# Verify that the installation is already in place.
if test ! -e "$progressbar_dir/installing-$app_nickname" ; then

    # Search for processes
    if test -e "$progressbar_dir/installing" ; then
	    # Put the process in the installation queue
	    kmsg=$(grep -r $app_nickname $progressbar_dir/queued-process)
	    if [[ $kmsg != *"$app_nickname"* ]]; then
			chmod 777 /tmp/progressbar-store/*
		    echo "$app_nickname=remove process-$app_name_process" >> $progressbar_dir/queued-process
	    fi

	    #I'm in the process queue, see you later
	    exit 0
    fi

    # Make sure the installer is busy
    ps -C packagekitd > /dev/null
    if [ $? = 0 ]
    then
        echo "packagekitd is here"
        ps -C rpm > /dev/null
        if [ $? = 0 ]
        then
		    echo "Installation in queue, rpm is here"

	        # Put the process in the installation queue
	        kmsg=$(grep -r $app_nickname $progressbar_dir/queued-process)
	        if [[ $kmsg != *"$app_nickname"* ]]; then
		        chmod 777 /tmp/progressbar-store/*
		        echo "$app_nickname=remove process-$Uninstall_queue_packagekitd" >> $progressbar_dir/queued-process
                echo "" > $progressbar_dir/progress
                echo "installing" > $progressbar_dir/progress-movement
                echo $Uninstall_queue > $progressbar_dir/status
                echo "show progress bar" > $progressbar_dir/progressbar
	        fi

	        #I'm in the process queue, see you later
            chmod 777 /tmp/progressbar-store/*
	        exit 0

        else
		    echo "rpm is not here"
		    echo "closing packagekitd"
		    killall packagekitd
        fi
    fi

    ps -C zypper > /dev/null
    if [ $? = 0 ]
    then
		echo "Installation in queue, zypper is here"

	    # Put the process in the installation queue
	    kmsg=$(grep -r $app_nickname $progressbar_dir/queued-process)
	    if [[ $kmsg != *"$app_nickname"* ]]; then
		    chmod 777 /tmp/progressbar-store/*
		    echo "$app_nickname=remove process-$Uninstall_queue" >> $progressbar_dir/queued-process
            echo "" > $progressbar_dir/progress
            echo "installing" > $progressbar_dir/progress-movement
            echo $Uninstall_queue > $progressbar_dir/status
            echo "show progress bar" > $progressbar_dir/progressbar
	    fi

	    #I'm in the process queue, see you later
        chmod 777 /tmp/progressbar-store/*
	    exit 0
    fi

    ps -C yast2 > /dev/null
    if [ $? = 0 ]
    then
		echo "Installation in queue, yast2 is here"

	    # Put the process in the installation queue
	    kmsg=$(grep -r $app_nickname $progressbar_dir/queued-process)
	    if [[ $kmsg != *"$app_nickname"* ]]; then
		    chmod 777 /tmp/progressbar-store/*
		    echo "$app_nickname=remove process-$Uninstall_queue" >> $progressbar_dir/queued-process
            echo "" > $progressbar_dir/progress
            echo "installing" > $progressbar_dir/progress-movement
            echo $Uninstall_queue > $progressbar_dir/status
            echo "show progress bar" > $progressbar_dir/progressbar
	    fi

	    #I'm in the process queue, see you later
        chmod 777 /tmp/progressbar-store/*
	    exit 0
    fi

    # Install app
    remove_app

    # Confirm installation
    if [[ $(flatpak list) == *"$package_id"* ]]; then
		chmod 777 /tmp/progressbar-store/*
	    rm -f $progressbar_dir/progress-movement
	    echo $removal_error > $progressbar_dir/progress
	    echo $removal_error_status > $progressbar_dir/status
	    uninstall_failed
		chmod 777 /tmp/progressbar-store/*
	    sleep 2
        # Clear cache
	    rm -f $progressbar_dir/installing
        rm -f $progressbar_dir/uninstalling-$app_nickname

	    # If there are no more processes, clear the progress bar cache
	    if test ! -e "$progressbar_dir/queued-1" ; then
			chmod 777 /tmp/progressbar-store/*
		    rm -f $progressbar_dir/progressbar
		    rm -f $progressbar_dir/*
	    fi
	    rm -f $progressbar_dir/progress-full

    else
		chmod 777 /tmp/progressbar-store/*
	    rm -f $progressbar_dir/progress-movement
	    echo "completed" > $progressbar_dir/progress-full
	    echo "" > $progressbar_dir/status && echo $success_removal > $progressbar_dir/progress
        sed -i "s/$app_nickname//" $installed_apps
        sed -i '/^$/d' $installed_apps
		chmod 777 /tmp/progressbar-store/*

        #Clear cache
        rm -f $progressbar_dir/uninstalling-$app_nickname
	    success_uninstall
	    sleep 2
	    rm -f $progressbar_dir/installing

	    #If there are no more processes, clear the progress bar cache
	    if test ! -e "$progressbar_dir/queued-1" ; then
			chmod 777 /tmp/progressbar-store/*
            sleep 2
		    rm -f $progressbar_dir/progressbar
            rm -f $progressbar_dir/progress-full
		    rm -f $progressbar_dir/*

        else
            rm -f $progressbar_dir/progress-full
	    fi
    fi

    if test ! -e "$progressbar_dir/queued-1" ; then
        if test -e "/tmp/progressbar-store/installing"; then
            echo "installing" > "/tmp/regataos-store/config/status.txt"
        else
            echo "inactive" > "/tmp/regataos-store/config/status.txt"
        fi
    fi
fi
