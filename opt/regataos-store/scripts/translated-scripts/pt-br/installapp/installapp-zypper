#! /bin/sh

# Settings and variables
#App name and more information
app_name="$name"
app_nickname="$nickname"
command_install="sudo zypper --non-interactive --no-gpg-checks install --auto-agree-with-licenses"
extra_package="$extra_packages"
architecture="$architecture"
file_download="$package"
repo_name="$repository_name"
check_installation="rpm -q $package"

# Capture repository url
repoUrl="$repository_url"
if [[ $repoUrl == *"[mainRepositoryUrl]"* ]]; then
    repo_link="$(grep -r mainRepositoryUrl= /usr/share/regataos/regataos-base-version.txt | cut -d'=' -f 2-)/$architecture"

elif [[ $repoUrl == *"[basedOnVersion]"* ]]; then
    basedOnVersion="$(grep -r basedOnVersion= /usr/share/regataos/regataos-base-version.txt | cut -d'=' -f 2-)"
    repo_link=$(echo $repoUrl | sed "s,\[basedOnVersion\],$basedOnVersion,")

elif [[ $repoUrl == *"[basedOn]"* ]]; then
    basedOn="$(grep -r basedOn= /usr/share/regataos/regataos-base-version.txt | cut -d'=' -f 2-)"
    repo_link=$(echo $repoUrl | sed "s,\[basedOn\],$basedOn,")

elif [[ $repoUrl == *"[sleOnVersion]"* ]]; then
    sleOnVersion="$(grep -r sleOnVersion= /usr/share/regataos/regataos-base-version.txt | cut -d'=' -f 2-)"
    repo_link=$(echo $repoUrl | sed "s,\[sleOnVersion\],$sleOnVersion,")

else
    repo_link="$repoUrl"
fi

#Variables for notifications
success_notify_title="$app_name"
success_notify_text="$app_name instalado com sucesso!"
error_notify_title="Erro na instalação do $app_name!"
error_notify_text="Ocorreu algum erro na instalação do $app_name."

#General information
installation_start="Iniciando instalação..."
installation_queue="Download pendente: instalador ocupado..."
installation_queue_packagekitd="Download pendente: atualizando o sistema..."
app_name_process="Instalar $app_name"
app_download_status="Baixando $app_name..."
app_install_status="Instalando $app_name..."
success_installation="Concluído!"
installation_error="Erro!"
installation_error_status="Erro na instalação!"
progressbar_dir="/tmp/progressbar-store"
installed_apps="/opt/regataos-store/installed-apps/installed-apps.txt"

#Reboot system
reboot_title="Regata OS Store - Reiniciar o sistema"
reboot_text="Para funcionar, o $app_name precisa que o sistema\nseja reiniciado. Você quer fazer isso agora?"
reboot_text_notice="Para funcionar, o $app_name precisa que o sistema seja\nreiniciado. Faça isso assim que puder."
reboot_confirm_button="Reiniciar o sistema"
reboot_cancel_button="Cancelar"

#Installation error feedback reported
bug_reported_title="Problema detectado!"
bug_reported_text="Fomos notificados sobre o erro na instalação do app $app_name."
bug_reported_view_log="Exibir log"
bug_reported_close_alert="Fechar"

# Notify
#Successful installation
function success_installation() {
    # All settings
    user=$(users | awk '{print $1}')
    user_id=$(id -u $user)

    title=$success_notify_title
    message=$success_notify_text

    sudo -u $user DISPLAY=:0 DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$user_id/bus notify-send -i emblem-ok-symbolic -u normal -a 'Regata OS Store' "$title" "$message"

    if [[ $restart_system == *"true"* ]]; then
        if test ! -e "$progressbar_dir/queued-1"; then
            sudo -H env DISPLAY=:0 zenity --question --text "$reboot_text" --icon-name=system-reboot \
            --title "$reboot_title" --ok-label "$reboot_confirm_button" --cancel-label "$reboot_cancel_button" --width 350 \
            --window-icon "/usr/share/pixmaps/regataos-store-icon.png"

            if [ $? -eq "0" ]; then
                sleep 1
                sudo reboot

            else
                echo "Process canceled"
            fi

        else
            sudo -H env DISPLAY=:0 zenity --warning --text "$reboot_text_notice" --icon-name=system-reboot \
            --title "$reboot_title" --ok-label "OK" --width 350 \
            --window-icon "/usr/share/pixmaps/regataos-store-icon.png"
        fi
    fi
}

#Installation failed
function installation_failed() {
    regataos_logs="/var/log/regataos-logs"
    echo "$app_nickname" > "$regataos_logs/installation-failed.txt"

    # All settings
    user=$(users | awk '{print $1}')
    user_id=$(id -u $user)

    title=$error_notify_title
    message=$error_notify_text

    curl https://regataos-statistics.vercel.app/api/appProblem?app=$app_name
    sudo -u $user DISPLAY=:0 DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$user_id/bus notify-send -i emblem-important-symbolic -u normal -a 'Regata OS Store' "$title" "$message"
    
    sudo -H env DISPLAY=:0 zenity --question --text "$bug_reported_text" --icon-name=error \
    --title "$bug_reported_title" --ok-label "$bug_reported_view_log" --cancel-label "$bug_reported_close_alert" --width 280 \
    --window-icon "/usr/share/pixmaps/regataos-store-icon.png"

    if [ $? -eq "0" ]; then
        sleep 1

        users=`who | cut -d' ' -f1 | uniq`
        for user in $users
        do
            su - $user -c "echo '$(cat $regataos_logs/installation-failed.txt)' > $regataos_logs/open-log-file.log"
        done

        rm -f "$regataos_logs/installation-failed.txt"

    else
        echo "Process canceled"
        rm -f "$regataos_logs/installation-failed.txt"
    fi
}

# Download and Install app
function Install_app() {
    # Add repo for app
    if [ ! -z $repo_name ]; then
        if test ! -e "/etc/zypp/repos.d/$repo_name.repo"; then

            # Check repository format
            if [[ $repo_link == *"stable/x86_64"* ]]; then
                repo_format="format_1"

            elif [[ $repo_link == *"binary-x86_64"* ]]; then
                repo_format="format_1"

            elif [[ $repo_link == *"archive/rpm/x86_64"* ]]; then
                repo_format="format_1"

            elif [[ $repo_link == *".com/x86_64"* ]]; then
                repo_format="format_1"

            else
                repo_format="format_2"
            fi

            if [[ $(echo $repo_format) == *"format_1"* ]]; then
                cat >"/etc/zypp/repos.d/$repo_name.repo" <<REPOCONTENT
[$repo_name]
name=$repo_name
baseurl=$repo_link
enabled=1
autorefresh=0
gpgcheck=0
keeppackages=0
type=rpm-md
REPOCONTENT

            elif [[ $(echo $repo_format) == *"format_2"* ]]; then
                cat >"/etc/zypp/repos.d/$repo_name.repo" <<REPOCONTENT
[$repo_name]
name=$repo_name
baseurl=$(echo $repo_link | sed 's/x86_64//' | sed 's/noarch//')
enabled=1
autorefresh=0
gpgcheck=0
keeppackages=0
type=rpm-md
REPOCONTENT

            else
                cat >"/etc/zypp/repos.d/$repo_name.repo" <<REPOCONTENT
[$repo_name]
name=$repo_name
baseurl=$(echo $repo_link | sed 's/x86_64//' | sed 's/noarch//')
enabled=1
autorefresh=0
gpgcheck=0
keeppackages=0
type=rpm-md
REPOCONTENT
            fi

        fi
    fi

    # Starting installation
    echo $app_name >$progressbar_dir/app-name
    echo $installation_start >$progressbar_dir/status
    echo "" >$progressbar_dir/progress
    echo "$app_nickname" >$progressbar_dir/installing
    echo "$app_nickname" >$progressbar_dir/installing-$app_nickname
    echo "show progress bar" >$progressbar_dir/progressbar
    echo "installing" >$progressbar_dir/progress-movement
    echo "installing" >"/tmp/regataos-store/config/status.txt"

    # Update app repo
    if [ -z $repo_name ]; then
        # Check repository format
        if [[ $repo_link == *"stable/x86_64"* ]]; then
            repo_format="format_1"

        elif [[ $repo_link == *"binary-x86_64"* ]]; then
            repo_format="format_1"

        elif [[ $repo_link == *"archive/rpm/x86_64"* ]]; then
            repo_format="format_1"

        else
            repo_format="format_2"
        fi

        if [[ $(echo $repo_format) == *"format_1"* ]]; then
            sudo zypper --non-interactive refresh $repo_link

        elif [[ $(echo $repo_format) == *"format_2"* ]]; then
            sudo zypper --non-interactive refresh $(echo $repo_link | sed "s/x86_64//" | sed "s/noarch//")

        else
            sudo zypper --non-interactive refresh $(echo $repo_link | sed "s/x86_64//" | sed "s/noarch//")
        fi

    else
        sudo zypper --non-interactive refresh $repo_name
    fi

    # Update regataos repo
    sudo zypper --non-interactive refresh regataos_22
    sudo zypper --non-interactive refresh plasmaregataos1

    # Check if there is a need to install or remove any packages before installing the app
    if [[ $(echo $package_prerm) != *"undefined"* ]]; then
        sudo zypper --non-interactive remove $package_prerm
    fi

    if [[ $(echo $package_preinst) != *"undefined"* ]]; then
        sudo zypper --non-interactive --no-gpg-checks install --auto-agree-with-licenses $package_preinst
    fi

    # Download
    #Link download
    if [ -z $download_link ]; then
        version=$(zypper --non-interactive info $file_download | grep Ver | awk '{print $3}' | head -1 | tail -1)
        app_download_file_name="$file_download"_"$version.$architecture.rpm"
        app_download_link="$repo_link/$app_download_file_name"

        wget --spider "$app_download_link"
        if [ $? != 0 ]; then
            app_download_file_name="$file_download-$version.$architecture.rpm"
            app_download_link="$repo_link/$app_download_file_name"
        fi

    elif [[ $download_link == *"undefined"* ]]; then
        version=$(zypper --non-interactive info $file_download | grep Ver | awk '{print $3}' | head -1 | tail -1)
        app_download_file_name="$file_download"_"$version.$architecture.rpm"
        app_download_link="$repo_link/$app_download_file_name"

        wget --spider "$app_download_link"
        if [ $? != 0 ]; then
            app_download_file_name="$file_download-$version.$architecture.rpm"
            app_download_link="$repo_link/$app_download_file_name"
        fi

    else
        version=$(zypper --non-interactive info $file_download | grep Ver | awk '{print $3}' | sed "s/-0//")
        app_download_file_name="$file_download-$version.$architecture.rpm"
        app_download_link=$(echo $download_link | sed "s/\[version\]/$version/")
    fi

    #Prepare the progress bar and downloading
    rm -f $progressbar_dir/progress-movement
    echo "$app_nickname" >$progressbar_dir/installing
    echo "$app_nickname" >$progressbar_dir/installing-$app_nickname
    echo $app_name >$progressbar_dir/app-name
    echo "0%" >$progressbar_dir/progress
    echo $app_download_status >$progressbar_dir/status
    chmod 777 /tmp/progressbar-store/*
    sleep 1
    echo "show progress bar" >$progressbar_dir/progressbar
    chmod 777 /tmp/progressbar-store/*

    echo "$progressbar_dir/$app_download_file_name" >$progressbar_dir/file-download-size
    chmod 777 /tmp/progressbar-store/*
    echo "wget --no-check-certificate -O $progressbar_dir/$app_download_file_name $app_download_link" >$progressbar_dir/get-pid
    wget --no-check-certificate -O $progressbar_dir/$app_download_file_name $app_download_link 2>&1 | (pv -n >$progressbar_dir/download-percentage)
    echo 100% >$progressbar_dir/progress
    chmod 777 /tmp/progressbar-store/*
    sleep 1
    #Clear cache
    rm -f $progressbar_dir/download-percentage
    rm -f $progressbar_dir/download-size
    rm -f $progressbar_dir/download-speed
    rm -f $progressbar_dir/file-size
    rm -f $progressbar_dir/eta
    #Remove cancel script
    rm -f $progressbar_dir/script-cancel

    # Install app
    #Prepare the progress bar and install
    chmod 777 /tmp/progressbar-store/*
    echo $app_install_status >$progressbar_dir/status
    echo "" >$progressbar_dir/progress
    echo "installing" >$progressbar_dir/progress-movement

    #Install with rpm
    cd $progressbar_dir/
    $command_install $app_download_file_name
    $command_install $extra_package > "/var/log/regataos-logs/install-app-extra-$app_nickname.log"
}

# Check if the application is already being installed
if test ! -e "$progressbar_dir/installing-$app_nickname"; then

    # If the installation queue is free, start installing this application
    if test -e "$progressbar_dir/installing"; then
        # Put the process in the installation queue
        kmsg=$(grep -r $app_nickname $progressbar_dir/queued-process)
        if [[ $kmsg != *"$app_nickname"* ]]; then
            chmod 777 /tmp/progressbar-store/*
            echo "$app_nickname=install process-$app_name_process" >>$progressbar_dir/queued-process
        fi

        #I'm in the process queue, see you later
        exit 0
    fi

    # Make sure the installer is busy
    ps -C packagekitd >/dev/null
    if [ $? = 0 ]; then
        echo "packagekitd is here"
        ps -C rpm >/dev/null
        if [ $? = 0 ]; then
            echo "Installation in queue, rpm is here"

            # Put the process in the installation queue
            kmsg=$(grep -r $app_nickname $progressbar_dir/queued-process)
            if [[ $kmsg != *"$app_nickname"* ]]; then
                chmod 777 /tmp/progressbar-store/*
                echo "stopped" > "/tmp/regataos-store/config/status.txt"
                echo "$app_name" > "$progressbar_dir/busy-installer-for.txt"
                echo "$app_nickname=install process-$installation_queue_packagekitd" >>$progressbar_dir/queued-process
                echo "" >$progressbar_dir/progress
                echo "installing" >$progressbar_dir/progress-movement
                echo $installation_queue >$progressbar_dir/status
                echo "show progress bar" >$progressbar_dir/progressbar
            fi

            #I'm in the process queue, see you later
            chmod 777 /tmp/progressbar-store/*
            exit 0

        else
            echo "rpm is not here"
            echo "closing packagekitd"
            killall packagekitd
        fi
    fi

    ps -C "zypper | Zypp-main" >/dev/null
    if [ $? = 0 ]; then
        echo "Installation in queue, zypper is here"

        # Put the process in the installation queue
        kmsg=$(grep -r $app_nickname $progressbar_dir/queued-process)
        if [[ $kmsg != *"$app_nickname"* ]]; then
            chmod 777 /tmp/progressbar-store/*
            echo "stopped" > "/tmp/regataos-store/config/status.txt"
            echo "$app_name" > "$progressbar_dir/busy-installer-for.txt"
            echo "$app_nickname=install process-$installation_queue" >>$progressbar_dir/queued-process
            echo "" >$progressbar_dir/progress
            echo "installing" >$progressbar_dir/progress-movement
            echo $installation_queue >$progressbar_dir/status
            echo "show progress bar" >$progressbar_dir/progressbar
        fi

        #I'm in the process queue, see you later
        chmod 777 /tmp/progressbar-store/*
        exit 0
    fi

    ps -C yast2 >/dev/null
    if [ $? = 0 ]; then
        echo "Installation in queue, yast2 is here"

        # Put the process in the installation queue
        kmsg=$(grep -r $app_nickname $progressbar_dir/queued-process)
        if [[ $kmsg != *"$app_nickname"* ]]; then
            chmod 777 /tmp/progressbar-store/*
            echo "stopped" > "/tmp/regataos-store/config/status.txt"
            echo "$app_name" > "$progressbar_dir/busy-installer-for.txt"
            echo "$app_nickname=install process-$installation_queue" >>$progressbar_dir/queued-process
            echo "" >$progressbar_dir/progress
            echo "installing" >$progressbar_dir/progress-movement
            echo $installation_queue >$progressbar_dir/status
            echo "show progress bar" >$progressbar_dir/progressbar
        fi

        #I'm in the process queue, see you later
        chmod 777 /tmp/progressbar-store/*
        exit 0
    fi

    ps -C "regataos-check- | regataos-update | regataos-up" >/dev/null
    if [ $? = 0 ]; then
        ps -C "zypper | Zypp-main | regataos-up-all | regataos-up-specific | regataos-up-other-up" >/dev/null
        if [ $? = 0 ]; then
            echo "Installation in queue, zypper is here"

            # Put the process in the installation queue
            kmsg=$(grep -r $app_nickname $progressbar_dir/queued-process)
            if [[ $kmsg != *"$app_nickname"* ]]; then
                chmod 777 /tmp/progressbar-store/*
                echo "stopped" > "/tmp/regataos-store/config/status.txt"
                echo "$app_name" > "$progressbar_dir/busy-installer-for.txt"
                echo "$app_nickname=install process-$installation_queue" >>$progressbar_dir/queued-process
                echo "" >$progressbar_dir/progress
                echo "installing" >$progressbar_dir/progress-movement
                echo $installation_queue >$progressbar_dir/status
                echo "show progress bar" >$progressbar_dir/progressbar
            fi

            #I'm in the process queue, see you later
            chmod 777 /tmp/progressbar-store/*
            exit 0
        fi
    fi

    # Install app
    Install_app > "/var/log/regataos-logs/install-app-$app_nickname.log"

    # If necessary, configure amf
    if test -e "/tmp/regataos-prime/config/regataos-prime.conf"; then
        if [[ $(grep -r "amf=" "/tmp/regataos-prime/config/regataos-prime.conf") == *"amf=on"* ]]; then
            sudo /opt/regataos-prime/scripts/enable-amd-amf -amf-on
        fi
    fi

    # Confirm installation
    if [[ $($check_installation) == *"$architecture"* ]]; then
        chmod 777 /tmp/progressbar-store/*
        rm -f $progressbar_dir/progress-movement
        echo "completed" >$progressbar_dir/progress-full
        echo "" >$progressbar_dir/status && echo $success_installation >$progressbar_dir/progress
        echo "$app_nickname" >>$installed_apps
        chmod 777 /tmp/progressbar-store/*

        #Clear cache
        rm -f $progressbar_dir/installing-$app_nickname
        rm -f "$progressbar_dir/busy-installer-for.txt"

        success_installation
        sleep 2
        rm -f $progressbar_dir/installing

        #If there are no more processes, clear the progress bar cache
        if test ! -e "$progressbar_dir/queued-1"; then
            chmod 777 /tmp/progressbar-store/*
            rm -f $progressbar_dir/progress-full
            rm -f $progressbar_dir/progressbar
            rm -f $progressbar_dir/*
        else
            rm -f $progressbar_dir/progress-full
        fi

    else
        chmod 777 /tmp/progressbar-store/*
        rm -f $progressbar_dir/progress-movement
        echo "error" > $progressbar_dir/progress-full-red
        echo $installation_error >$progressbar_dir/progress
        echo $installation_error_status >$progressbar_dir/status
        if [ ! -z $repo_name ]; then
            sudo rm -f "/etc/zypp/repos.d/$repo_name.repo"
        fi

        installation_failed &
        sleep 2

        #Clear cache
        chmod 777 /tmp/progressbar-store/*
        rm -f $progressbar_dir/installing
        rm -f $progressbar_dir/installing-$app_nickname
        rm -f "$progressbar_dir/busy-installer-for.txt"

        # If there are no more processes, clear the progress bar cache
        if test ! -e "$progressbar_dir/queued-1"; then
            chmod 777 /tmp/progressbar-store/*
            rm -f $progressbar_dir/progressbar
            rm -f $progressbar_dir/*
        fi
        rm -f $progressbar_dir/progress-full
        rm -f $progressbar_dir/progress-full-red
    fi

    if test ! -e "$progressbar_dir/queued-1" ; then
        if test -e "/tmp/progressbar-store/installing"; then
            echo "installing" > "/tmp/regataos-store/config/status.txt"
        else
            echo "inactive" > "/tmp/regataos-store/config/status.txt"
        fi
    fi
fi
